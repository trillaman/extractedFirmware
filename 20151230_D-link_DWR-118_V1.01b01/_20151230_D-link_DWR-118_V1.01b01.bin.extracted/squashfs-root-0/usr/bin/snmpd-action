#!/bin/sh
#
# snmp-action                     This script do a action of snmp
#

# From AUTOCONF
prefix=
exec_prefix=${prefix}

# Paths to programs
UVM=/usr/bin/uvm
UO_PATH=/usr/uo
UO_FILE=snmpd.conf.uo
#UO_FILE2=snmpd.sh.uo
#SH_EXEC=snmpd.sh
CONF_PATH=/etc
CONF_FILE=snmpd.conf
SNMP_EXEC=/usr/sbin/snmpd
SNMP_PIDFILE=/var/run/snmpd.pid

start() {
	local err; err=0
	echo -n "start snmpd ..."
	$UVM $UO_PATH/$UO_FILE > $CONF_PATH/$CONF_FILE 
#	$UVM $UO_PATH/$UO_FILE2 > $CONF_PATH/$SH_EXEC
#	(. $CONF_PATH/$SH_EXEC start );
	$SNMP_EXEC -P $SNMP_PIDFILE -c $CONF_PATH/$CONF_FILE -C&	
	return $err
}

stop() {

	if [ -e "$SNMP_PIDFILE" ] ; then
		SNMP_PID=`cat "$SNMP_PIDFILE"`
		echo "Killing snmpd ($SNMP_PID)"
		kill $SNMP_PID > /dev/null 2>&1
#		(. $CONF_PATH/$SH_EXEC stop );
	else
		echo "$SNMP_PIDFILE not exit!"
		err=1
	fi
	return $err
}

usage() {
	echo "$0 [start|stop|restart|reload|config]"
	exit 1
}

# +++++++++++++++ main ++++++++++++++++++++++ 
[ -z "$1" ] && usage;

err=0

case "$1" in
	config)		;;
	start)		start;;
	stop)		stop;;
	reload)		;;
	restart)	stop; start;;
	*)		usage;;
esac
if [ $? = "0" ] ; then
	echo $0 $@ ok
else
	echo $0 $@ error
	err=1
fi

exit $err
